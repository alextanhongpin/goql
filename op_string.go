// Code generated by "stringer -type Op -trimprefix Op"; DO NOT EDIT.

package goql

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpEq-0]
	_ = x[OpNeq-1]
	_ = x[OpLt-2]
	_ = x[OpLte-3]
	_ = x[OpGt-4]
	_ = x[OpGte-5]
	_ = x[OpIn-6]
	_ = x[OpBetween-7]
	_ = x[OpIs-8]
	_ = x[OpIsNot-9]
	_ = x[OpOverlap-10]
	_ = x[OpAt-11]
	_ = x[OpContainedBy-12]
	_ = x[OpContainedAt-13]
	_ = x[OpNow-14]
	_ = x[OpToday-15]
	_ = x[OpYesterday-16]
	_ = x[OpContains-17]
	_ = x[OpSubset-18]
	_ = x[OpSuperSet-19]
}

const _Op_name = "EqNeqLtLteGtGteInBetweenIsIsNotOverlapAtContainedByContainedAtNowTodayYesterdayContainsSubsetSuperSet"

var _Op_index = [...]uint8{0, 2, 5, 7, 10, 12, 15, 17, 24, 26, 31, 38, 40, 51, 62, 65, 70, 79, 87, 93, 101}

func (i Op) String() string {
	if i < 0 || i >= Op(len(_Op_index)-1) {
		return "Op(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Op_name[_Op_index[i]:_Op_index[i+1]]
}
