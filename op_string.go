// Code generated by "stringer -type Op -trimprefix Op"; DO NOT EDIT.

package goql

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpEq-1]
	_ = x[OpNeq-2]
	_ = x[OpLt-4]
	_ = x[OpLte-8]
	_ = x[OpGt-16]
	_ = x[OpGte-32]
	_ = x[OpLike-64]
	_ = x[OpIlike-128]
	_ = x[OpNotLike-256]
	_ = x[OpNotIlike-512]
	_ = x[OpIn-1024]
	_ = x[OpNotIn-2048]
	_ = x[OpIs-4096]
	_ = x[OpIsNot-8192]
	_ = x[OpFts-16384]
	_ = x[OpPlFts-32768]
	_ = x[OpPhFts-65536]
	_ = x[OpWFts-131072]
	_ = x[OpCs-262144]
	_ = x[OpCd-524288]
	_ = x[OpOv-1048576]
	_ = x[OpSl-2097152]
	_ = x[OpSr-4194304]
	_ = x[OpNxr-8388608]
	_ = x[OpNxl-16777216]
	_ = x[OpAdj-33554432]
	_ = x[OpNot-67108864]
	_ = x[OpOr-134217728]
	_ = x[OpAnd-268435456]
}

const _Op_name = "EqNeqLtLteGtGteLikeIlikeNotLikeNotIlikeInNotInIsIsNotFtsPlFtsPhFtsWFtsCsCdOvSlSrNxrNxlAdjNotOrAnd"

var _Op_map = map[Op]string{
	1:         _Op_name[0:2],
	2:         _Op_name[2:5],
	4:         _Op_name[5:7],
	8:         _Op_name[7:10],
	16:        _Op_name[10:12],
	32:        _Op_name[12:15],
	64:        _Op_name[15:19],
	128:       _Op_name[19:24],
	256:       _Op_name[24:31],
	512:       _Op_name[31:39],
	1024:      _Op_name[39:41],
	2048:      _Op_name[41:46],
	4096:      _Op_name[46:48],
	8192:      _Op_name[48:53],
	16384:     _Op_name[53:56],
	32768:     _Op_name[56:61],
	65536:     _Op_name[61:66],
	131072:    _Op_name[66:70],
	262144:    _Op_name[70:72],
	524288:    _Op_name[72:74],
	1048576:   _Op_name[74:76],
	2097152:   _Op_name[76:78],
	4194304:   _Op_name[78:80],
	8388608:   _Op_name[80:83],
	16777216:  _Op_name[83:86],
	33554432:  _Op_name[86:89],
	67108864:  _Op_name[89:92],
	134217728: _Op_name[92:94],
	268435456: _Op_name[94:97],
}

func (i Op) String() string {
	if str, ok := _Op_map[i]; ok {
		return str
	}
	return "Op(" + strconv.FormatInt(int64(i), 10) + ")"
}
